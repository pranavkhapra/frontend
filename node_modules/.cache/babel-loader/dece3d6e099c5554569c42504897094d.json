{"ast":null,"code":"var _jsxFileName = \"/home/just_a_random_person_to_ignore/React-JS-Student-Management-System-Frontend/src/components/profile/ChangePassword.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { studentChangePassword } from \"../../actions/studentActions\";\nimport { teacherChangePassword } from \"../../actions/teacherActions\";\nimport { adminChangePassword } from \"../../actions/adminActions\";\nimport MessageAlert from \"../partial/MessageAlert\";\nimport { userGetter } from \"../../utils/userGetter\";\n\nclass ChangePassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      old_password: \"\",\n      new_password: \"\",\n      user: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        user,\n        old_password,\n        new_password\n      } = this.state;\n      let user_id = localStorage.getItem(\"user_id\");\n\n      if (user.role === 'student') {\n        this.props.studentChangePassword(user_id, old_password, new_password);\n      }\n\n      if (user.role === 'teacher') {\n        this.props.teacherChangePassword(user_id, old_password, new_password);\n      }\n\n      if (user.role === 'admin') {\n        this.props.adminChangePassword(user_id, old_password, new_password);\n      }\n\n      this.setState({\n        old_password: \"\",\n        new_password: \"\"\n      });\n    };\n  }\n\n  async componentDidMount() {\n    let user_id = localStorage.getItem(\"user_id\");\n    let user = await userGetter(user_id);\n    this.setState({\n      user\n    });\n\n    if (user == null) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    const {\n      old_password,\n      new_password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Change Password\"), /*#__PURE__*/React.createElement(MessageAlert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Old Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Old Password\",\n      type: \"password\",\n      id: \"old_password\",\n      name: \"old_password\",\n      onChange: this.onChange,\n      required: true,\n      value: old_password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"New Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      placeholder: \"New Password\",\n      type: \"password\",\n      id: \"new_password\",\n      name: \"new_password\",\n      onChange: this.onChange,\n      required: true,\n      value: new_password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Change Password\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    studentChangePassword: (updatedStudentID, oldPassword, newPassword) => {\n      dispatch(studentChangePassword(updatedStudentID, oldPassword, newPassword));\n    },\n    teacherChangePassword: (updatedTeacherID, oldPassword, newPassword) => {\n      dispatch(teacherChangePassword(updatedTeacherID, oldPassword, newPassword));\n    },\n    adminChangePassword: (updatedAdminID, oldPassword, newPassword) => {\n      dispatch(adminChangePassword(updatedAdminID, oldPassword, newPassword));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ChangePassword);","map":{"version":3,"sources":["/home/just_a_random_person_to_ignore/React-JS-Student-Management-System-Frontend/src/components/profile/ChangePassword.js"],"names":["React","Component","connect","studentChangePassword","teacherChangePassword","adminChangePassword","MessageAlert","userGetter","ChangePassword","state","old_password","new_password","user","onChange","e","setState","target","id","value","onSubmit","preventDefault","user_id","localStorage","getItem","role","props","componentDidMount","history","push","render","mapDispatchToProps","dispatch","updatedStudentID","oldPassword","newPassword","updatedTeacherID","updatedAdminID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {studentChangePassword} from \"../../actions/studentActions\";\nimport {teacherChangePassword} from \"../../actions/teacherActions\";\nimport {adminChangePassword} from \"../../actions/adminActions\";\nimport MessageAlert from \"../partial/MessageAlert\";\nimport {userGetter} from \"../../utils/userGetter\";\n\nclass ChangePassword extends Component {\n\n    state = {\n        old_password: \"\",\n        new_password: \"\",\n        user: {}\n    }\n\n    async componentDidMount() {\n        let user_id = localStorage.getItem(\"user_id\");\n        let user = await userGetter(user_id)\n\n        this.setState({\n            user\n        })\n\n        if (user == null){\n            this.props.history.push(\"/\");\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const {user, old_password, new_password} = this.state;\n        let user_id = localStorage.getItem(\"user_id\");\n\n        if (user.role === 'student'){\n            this.props.studentChangePassword(user_id, old_password, new_password)\n        }\n\n        if (user.role === 'teacher'){\n            this.props.teacherChangePassword(user_id, old_password, new_password)\n        }\n\n        if (user.role === 'admin'){\n            this.props.adminChangePassword(user_id, old_password, new_password)\n        }\n\n        this.setState({\n            old_password: \"\",\n            new_password: \"\",\n        })\n    }\n\n    render() {\n        const {old_password, new_password} = this.state;\n            \n        return (\n            <div className=\"container\">\n                <h1>Change Password</h1>\n                <MessageAlert/>    \n\n                <form onSubmit={this.onSubmit}>\n\n                    <div className=\"form-group\">\n                        <label>Old Password:</label>\n                        <input className=\"form-control\" placeholder=\"Old Password\" type=\"password\" id=\"old_password\" name=\"old_password\" onChange={this.onChange} required value={old_password}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>New Password:</label>\n                        <input className=\"form-control\" placeholder=\"New Password\" type=\"password\" id=\"new_password\" name=\"new_password\" onChange={this.onChange} required value={new_password}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Change Password</button>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        studentChangePassword: (updatedStudentID, oldPassword, newPassword) => {dispatch(studentChangePassword(updatedStudentID, oldPassword, newPassword))},\n        teacherChangePassword: (updatedTeacherID, oldPassword, newPassword) => {dispatch(teacherChangePassword(updatedTeacherID, oldPassword, newPassword))},\n        adminChangePassword: (updatedAdminID, oldPassword, newPassword) => {dispatch(adminChangePassword(updatedAdminID, oldPassword, newPassword))}\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}