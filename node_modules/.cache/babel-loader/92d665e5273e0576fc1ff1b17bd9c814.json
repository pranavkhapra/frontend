{"ast":null,"code":"import { ADD_TEACHER, DELETE_TEACHER, EDIT_TEACHER, GET_ALL_TEACHERS, GET_TEACHERS_BY_NAME, GET_TEACHER_BY_ID, SET_MESSAGE, USER_LOGIN, TEACHER_CHANGE_PASSWORD } from \"./types\";\nimport axios from \"axios\";\nimport { addTeacherURL, allTeachersURL, getDeleteTeacherURL, getEditTeacherURL, getTeacherByIDURL, getTeachersByNameURL, teacherLoginURL, getTeacherChangePasswordURL } from \"../config/routes\";\nexport const getAllTeachers = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(allTeachersURL);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teachers = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: GET_ALL_TEACHERS,\n        payload: {\n          teachers,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const getTeacherByID = teacher_id => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(getTeacherByIDURL(teacher_id));\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teacher = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: GET_TEACHER_BY_ID,\n        payload: {\n          teacher,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const getTeachersByName = teacher_name => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(getTeachersByNameURL(teacher_name));\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teachers = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: GET_TEACHERS_BY_NAME,\n        payload: {\n          teachers,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const addTeacher = newTeacher => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(addTeacherURL, newTeacher);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teacher = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message,\n          msg_type: \"success\"\n        }\n      });\n      return dispatch({\n        type: ADD_TEACHER,\n        payload: {\n          teacher\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const editTeacher = updatedTeacher => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(getEditTeacherURL(updatedTeacher._id), updatedTeacher);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teacher = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message,\n          msg_type: \"success\"\n        }\n      });\n      return dispatch({\n        type: EDIT_TEACHER,\n        payload: {\n          teacher\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const deleteTeacher = deletedTeacher => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(getDeleteTeacherURL(deletedTeacher._id));\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teacher = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message,\n          msg_type: \"success\"\n        }\n      });\n      return dispatch({\n        type: DELETE_TEACHER,\n        payload: {\n          teacher\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const teacherLogin = teacherAccount => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(teacherLoginURL, teacherAccount);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const {\n        token\n      } = res.data;\n      const user_id = data._id;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      if (data === null) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message: \"Wrong email or password\",\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: USER_LOGIN,\n        payload: {\n          user_id,\n          token,\n          date: Date.now()\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const teacherChangePassword = (updatedTeacherID, oldPassword, newPassword) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(getTeacherChangePasswordURL(updatedTeacherID), {\n        oldPassword,\n        newPassword\n      });\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const teacher = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message,\n          msg_type: \"success\"\n        }\n      });\n      return dispatch({\n        type: TEACHER_CHANGE_PASSWORD,\n        payload: {\n          teacher\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/just_a_random_person_to_ignore/React-JS-Student-Management-System-Frontend/src/actions/teacherActions.js"],"names":["ADD_TEACHER","DELETE_TEACHER","EDIT_TEACHER","GET_ALL_TEACHERS","GET_TEACHERS_BY_NAME","GET_TEACHER_BY_ID","SET_MESSAGE","USER_LOGIN","TEACHER_CHANGE_PASSWORD","axios","addTeacherURL","allTeachersURL","getDeleteTeacherURL","getEditTeacherURL","getTeacherByIDURL","getTeachersByNameURL","teacherLoginURL","getTeacherChangePasswordURL","getAllTeachers","dispatch","res","get","data","success","message","teachers","type","payload","msg_type","error","response","getTeacherByID","teacher_id","teacher","getTeachersByName","teacher_name","addTeacher","newTeacher","post","editTeacher","updatedTeacher","put","_id","deleteTeacher","deletedTeacher","delete","teacherLogin","teacherAccount","token","user_id","date","Date","now","teacherChangePassword","updatedTeacherID","oldPassword","newPassword"],"mappings":"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","sourcesContent":["import {\n    ADD_TEACHER,\n    DELETE_TEACHER,\n    EDIT_TEACHER,\n    GET_ALL_TEACHERS,\n    GET_TEACHERS_BY_NAME,\n    GET_TEACHER_BY_ID,\n    SET_MESSAGE,\n    USER_LOGIN,\n    TEACHER_CHANGE_PASSWORD\n} from \"./types\";\nimport axios from \"axios\";\nimport {\n    addTeacherURL,\n    allTeachersURL,\n    getDeleteTeacherURL,\n    getEditTeacherURL,\n    getTeacherByIDURL,\n    getTeachersByNameURL,\n    teacherLoginURL,\n    getTeacherChangePasswordURL\n} from \"../config/routes\";\n\nexport const getAllTeachers = () => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.get(allTeachersURL)\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teachers = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: GET_ALL_TEACHERS,\n                payload: {\n                    teachers,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const getTeacherByID = (teacher_id) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.get(getTeacherByIDURL(teacher_id))\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teacher = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: GET_TEACHER_BY_ID,\n                payload: {\n                    teacher,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const getTeachersByName = (teacher_name) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.get(getTeachersByNameURL(teacher_name))\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teachers = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: GET_TEACHERS_BY_NAME,\n                payload: {\n                    teachers,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const addTeacher = (newTeacher) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.post(addTeacherURL, newTeacher)\n            \n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teacher = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n\n            return dispatch({\n                type: ADD_TEACHER,\n                payload: {\n                    teacher\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const editTeacher = (updatedTeacher) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.put(getEditTeacherURL(updatedTeacher._id), updatedTeacher)\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teacher = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n\n            return dispatch({\n                type: EDIT_TEACHER,\n                payload: {\n                    teacher\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const deleteTeacher = (deletedTeacher) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.delete(getDeleteTeacherURL(deletedTeacher._id))\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teacher = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n\n            return dispatch({\n                type: DELETE_TEACHER,\n                payload: {\n                    teacher\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const teacherLogin = (teacherAccount) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.post(teacherLoginURL, teacherAccount)\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const {token} = res.data;\n            const user_id = data._id;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            if (data === null) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message: \"Wrong email or password\",\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: USER_LOGIN,\n                payload: {\n                    user_id,\n                    token,\n                    date: Date.now()\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const teacherChangePassword = (updatedTeacherID, oldPassword, newPassword) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.put(getTeacherChangePasswordURL(updatedTeacherID), {oldPassword, newPassword})\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const teacher = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n\n            return dispatch({\n                type: TEACHER_CHANGE_PASSWORD,\n                payload: {\n                    teacher\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}