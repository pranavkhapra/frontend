{"ast":null,"code":"import { GET_ALL_ADMINS, GET_ADMIN_BY_ID, EDIT_ADMIN, ADD_ADMIN, SET_MESSAGE, USER_LOGIN, ADMIN_CHANGE_PASSWORD } from \"../actions/types\";\nimport axios from \"axios\";\nimport { allAdminsURL, addAdminURL, getAdminByIDURL, getEditAdminURL, adminLoginURL, getAdminChangePasswordURL } from \"../config/routes\";\nexport const getAllAdmins = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(allAdminsURL);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const admins = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: GET_ALL_ADMINS,\n        payload: {\n          admins,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const getAdminByID = admin_id => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(getAdminByIDURL(admin_id));\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const admin = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: GET_ADMIN_BY_ID,\n        payload: {\n          admin,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const addAdmin = newAdmin => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(addAdminURL, newAdmin);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const admin = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: ADD_ADMIN,\n        payload: {\n          admin,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const editAdmin = updatedAdmin => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(getEditAdminURL(updatedAdmin._id), updatedAdmin);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const admin = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: EDIT_ADMIN,\n        payload: {\n          admin,\n          message,\n          msg_type: \"success\"\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const adminLogin = adminAccount => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(adminLoginURL, adminAccount);\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const {\n        token\n      } = res.data;\n      const user_id = data._id;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message: \"Wrong email or password\",\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      if (data === null) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message: \"Wrong email or password\",\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      return dispatch({\n        type: USER_LOGIN,\n        payload: {\n          user_id,\n          token,\n          date: Date.now()\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const adminChangePassword = (updatedAdminID, oldPassword, newPassword) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(getAdminChangePasswordURL(updatedAdminID), {\n        oldPassword,\n        newPassword\n      });\n      const {\n        data,\n        success,\n        message\n      } = res.data;\n      const admin = data;\n\n      if (success === false) {\n        return dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            message,\n            msg_type: \"danger\"\n          }\n        });\n      }\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message,\n          msg_type: \"success\"\n        }\n      });\n      return dispatch({\n        type: ADMIN_CHANGE_PASSWORD,\n        payload: {\n          admin\n        }\n      });\n    } catch (error) {\n      return dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          message: error.response.data.message,\n          msg_type: \"danger\"\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/just_a_random_person_to_ignore/React-JS-Student-Management-System-Frontend/src/actions/adminActions.js"],"names":["GET_ALL_ADMINS","GET_ADMIN_BY_ID","EDIT_ADMIN","ADD_ADMIN","SET_MESSAGE","USER_LOGIN","ADMIN_CHANGE_PASSWORD","axios","allAdminsURL","addAdminURL","getAdminByIDURL","getEditAdminURL","adminLoginURL","getAdminChangePasswordURL","getAllAdmins","dispatch","res","get","data","success","message","admins","type","payload","msg_type","error","response","getAdminByID","admin_id","admin","addAdmin","newAdmin","post","editAdmin","updatedAdmin","put","_id","adminLogin","adminAccount","token","user_id","date","Date","now","adminChangePassword","updatedAdminID","oldPassword","newPassword"],"mappings":"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","sourcesContent":["import {\n    GET_ALL_ADMINS,\n    GET_ADMIN_BY_ID,\n    EDIT_ADMIN,\n    ADD_ADMIN,\n    SET_MESSAGE,\n    USER_LOGIN,\n    ADMIN_CHANGE_PASSWORD\n} from \"../actions/types\";\nimport axios from \"axios\";\nimport {\n    allAdminsURL,\n    addAdminURL,\n    getAdminByIDURL,\n    getEditAdminURL,\n    adminLoginURL,\n    getAdminChangePasswordURL\n} from \"../config/routes\";\n\nexport const getAllAdmins = () => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.get(allAdminsURL)\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const admins = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: GET_ALL_ADMINS,\n                payload: {\n                    admins,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const getAdminByID = (admin_id) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.get(getAdminByIDURL(admin_id))\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const admin = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: GET_ADMIN_BY_ID,\n                payload: {\n                    admin,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const addAdmin = (newAdmin) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.post(addAdminURL, newAdmin)\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const admin = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: ADD_ADMIN,\n                payload: {\n                    admin,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const editAdmin = (updatedAdmin) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.put(getEditAdminURL(updatedAdmin._id), updatedAdmin)\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const admin = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: EDIT_ADMIN,\n                payload: {\n                    admin,\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const adminLogin = (adminAccount) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.post(adminLoginURL, adminAccount)\n            const {\n                data,\n                success,\n                message,\n            } = res.data;\n            const {token} = res.data;\n            const user_id = data._id;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message: \"Wrong email or password\",\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            if (data === null) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message: \"Wrong email or password\",\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            return dispatch({\n                type: USER_LOGIN,\n                payload: {\n                    user_id,\n                    token,\n                    date: Date.now()\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n\nexport const adminChangePassword = (updatedAdminID, oldPassword, newPassword) => {\n    return async (dispatch) => {\n        try {\n            const res = await axios.put(getAdminChangePasswordURL(updatedAdminID), {oldPassword, newPassword})\n            const {\n                data,\n                success,\n                message\n            } = res.data;\n            const admin = data;\n\n            if (success === false) {\n                return dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        message,\n                        msg_type: \"danger\"\n                    }\n                })\n            }\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message,\n                    msg_type: \"success\"\n                }\n            })\n\n            return dispatch({\n                type: ADMIN_CHANGE_PASSWORD,\n                payload: {\n                    admin\n                }\n            })\n        } catch (error) {\n            return dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    message: error.response.data.message,\n                    msg_type: \"danger\"\n                }\n            })\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}